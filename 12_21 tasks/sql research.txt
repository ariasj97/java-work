What is?


1) RDBMS
- Relational Database Managment System or RDBMS is a program that allows you to create, update, and administer a relational database. Most relational database managment systems use the SQL language to access the database.
- Without SQL which is the language RDBMS would not be accessable, since a language is needed to for access and SQL is the most popular one used. SQL syntax is similar to the english language which makes it relatively easy to use.


2) Normalization (1NF, 2NF, 3NF, 3.5NF)
- Normalization is the process of organizing the data in the database.
- Normalization is used to minimaize the redudndancy from a relation or set of relations. It is also used to eliminate the unesireable characteristics like Insertion, update and Deletion Anomalies.
- 1NF(First Normal Form): In this form each column is unique
- 2NF(Second Normal Form): The entity should be considered already in 1NF, and all attributes within the entity should depend solely on the unique identifier of entity. For example, one of the columns will be ID so no ID of a product or person will be the same.
- 3NF(Third Normal Form): The entity should be considered already in 2NF, and no column entry should be dependent on any other entry(value) other than the key for the table.
- 3.5NF(Boyce-Codd Normal Form): 3NF and all tables in the database should be only one primary key.


3)Data Types of SQL (PostgresSQL)

- Boolean: can hold one of three possible values: true, false or null. You use boolean or bool keyword to declare a column with the Boolean data type. When you insert data into a Boolean column, PostgreSQL converts it to a Boolean value
	1, yes, y, t, true values are converted to true
	0, no, false, f values are converted to false.
When you select data from a Boolean column, PostgreSQL converts the values back e.g., t to true, f to false and space to null.

-Character: PostgreSQL provides three character data types: CHAR(n), VARCHAR(n), and TEXT
	- CHAR(n) is the fixed-length character with space padded. If you insert a string that 	is shorter than the length of the column, PostgreSQL pads spaces. If you insert a 	string that is longer than the length of the column, PostgreSQL will issue an error.
 	- VARCHAR(n) is the variable-length character string.  With VARCHAR(n),  you can store 	up to n characters. PostgreSQL does not pad spaces when the stored string is shorter 		than the length of the column.
 	- TEXT is the variable-length character string. Theoretically, text data is a 			character string with unlimited length.

-Integer: There are three kinds of integers in PostgreSQL:
	- Small integer ( SMALLINT) is 2-byte signed integer that has a range from -32,768 to 		32,767.
	- Integer ( INT) is a 4-byte integer that has a range from -2,147,483,648 to 		2,147,483,647.
	- Serial is the same as integer except that PostgreSQL will automatically generate and 	populate values into the SERIAL column. This is similar to AUTO_INCREMENT column in 		MySQL or AUTOINCREMENT column in SQLite.

- Floating-point number: There three main types of floating-point numbers:
	- float(n)  is a floating-point number whose precision, at least, n, up to a maximum 		of 8 bytes.
	- real or float8is a 4-byte floating-point number.
	- numeric or numeric(p,s) is a real number with p digits with s number after the 		decimal point. The numeric(p,s) is the exact number.

- Temporal data types: allow you to store date and /or  time data. PostgreSQL has five main temporal data types:
	-DATEstores the dates only.
	-TIMEstores the time of day values.
	-TIMESTAMPstores both date and time values.
	-TIMESTAMPTZ is a timezone-aware timestamp data type. It is the abbreviation for 		timestamp with the time zone.
	-INTERVAL stores periods of time.
The TIMESTAMPTZ is the PostgreSQL’s extension to the SQL standard’s temporal data types.

- Arrays: In PostgreSQL, you can store an array of strings, an array of integers, etc., in array columns. The array comes in handy in some situations e.g., storing days of the week, months of the year.

-JSON: PostgreSQL provides two JSON data types: JSON and JSONB for storing JSON data.
The JSON data type stores plain JSON data that requires reparsing for each processing, while JSONB data type stores JSON data in a binary format which is faster to process but slower to insert. In addition, JSONB supports indexing, which can be an advantage.

-UUID: allows you to store Universal Unique Identifiers defined by RFC 4122 . The UUID values guarantee a better uniqueness than SERIAL and can be used to hide sensitive data exposed to the public such as values of id in URL.

-Special data types: Besides the primitive data types, PostgreSQL also provides several special data types related to geometric and network.
	- box– a rectangular box.
	- line – a set of points.
	- point– a geometric pair of numbers.
	- lseg– a line segment.
	- polygon– a closed geometric.
	- inet– an IP4 address.
	- macaddr– a MAC address.


4)Sub Languages of SQL(DDL, DML, DQL, DCL and TCL)

-DDL(Data Definition Language) consists of the SQL commands that can be used to define the database schema. It simply deals with descriptions of the database schema and is used to create and modify the structure of database objects in the database.
Examples:
	CREATE – is used to create the database or its objects (like table, index, function, 	views, store procedure and triggers).
	DROP – is used to delete objects from the database.
	ALTER-is used to alter the structure of the database.
	TRUNCATE–is used to remove all records from a table, including all spaces allocated 	for the records are removed.
	COMMENT –is used to add comments to the data dictionary.
	RENAME –is used to rename an object existing in the database.

-DQL(Data Query Language) are used for performing queries on the data within schema objects. The purpose of DQL Command is to get some schema relation based on the query passed to it.
Examples:
	SELECT – is used to retrieve data from the a database.

-DML(Data Manipulation Language) deals with the manipulation of data present in the database belong to DML or Data Manipulation Language and this includes most of the SQL statements.
Examples:
	INSERT – is used to insert data into a table.
	UPDATE – is used to update existing data within a table.
	DELETE – is used to delete records from a database table.
-DCL(Data Control Language) includes commands such as GRANT and REVOKE which mainly deals with the rights, permissions and other controls of the database system.
Examples:
	GRANT-gives user’s access privileges to database.
	REVOKE-withdraw user’s access privileges given by using the GRANT command.

-TCL(Transaction Control Language) deals with the transaction within the database.
Examples: 
	COMMIT– commits a Transaction.
	ROLLBACK– rollbacks a transaction in case of any error occurs.
	SAVEPOINT–sets a savepoint within a transaction.
	SET TRANSACTION–specify characteristics for the transaction

5)Constraints of SQL (PostgresSQL)

- UNIQUE Constraint: Ensures that all values in a column are different
- NOT NULL Constraint: Ensures that a column cannot have a NULL value
- CHECK constraint: The CHECK constraint ensures that all values in a column satisfy certain condiditons.
- PRIMARY KEY Contsraint: Uniquely identifies each row/record in a database table.
- FOREIGN KEY Constraint(Referential integrity contstraint): Constrains data based on columns in other tables.

























